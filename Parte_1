--1.1
CREATE TABLE  OIJ_TEMP (
    delito varchar(255), 
    subdelito varchar(255), 
    fecha varchar(255), 
    hora varchar(255),
    victima varchar(255), 
    subvictima varchar(255), 
    edad varchar(255), 
    genero varchar(255), 
    nacionalidad varchar(255), 
    provincia varchar(255), 
    canton varchar(255), 
    distrito varchar(255)
);

CREATE TABLE INEC_TEMP (
    provincia_canton VARCHAR(100),
    poblacion_15_mas INTEGER,
    tasa_participacion FLOAT,
    tasa_ocupacion FLOAT,
    tasa_desempleo FLOAT,
    porcentaje_inactiva FLOAT,
    relacion_dependencia FLOAT,
    sector_primario FLOAT,
    sector_secundario FLOAT,
    sector_terciario FLOAT
);

COPY oij_temp 
FROM 'C:\ProgramData\Microsoft\Windows\Start Menu\Programs\PostgreSQL 16\Documentation\oij.csv' 
DELIMITER ',' 
CSV HEADER;

ALTER TABLE oij_temp
DROP COLUMN distrito;


update oij_temp set canton = 'sarchi' where canton = 'sarch&#205;';

COPY inec_temp 
FROM 'C:\ProgramData\Microsoft\Windows\Start Menu\Programs\PostgreSQL 16\Documentation\inec.csv' 
DELIMITER ',' 
CSV HEADER;

update inec_temp set provincia_canton = 'sarchi' where provincia_canton = 'sarch&#205;';


UPDATE OIJ_TEMP
SET canton = TRIM(LOWER(canton));

UPDATE OIJ_TEMP
SET provincia = TRIM(LOWER(provincia));

UPDATE inec_temp
SET provincia_canton = TRIM(LOWER(provincia_canton));

UPDATE inec_TEMP
SET provincia_canton = TRANSLATE(provincia_canton, 'áéíóúÁÉÍÓÚñ', 'aeiouAEIOUn');


--select con los join para verificar que en las tablas temp sean 47476, aunque para que sean todos los datos completos se debe hacer un full outer join

select ot.*, it.*
from oij_temp ot
left join inec_temp it on ot.canton = it.provincia_canton;

--1.2
CREATE SCHEMA OIJ_INEC;

create table  OIJ_INEC.Provincias (
	ID_Provincia int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
	nombre_provincia varchar(100) not null unique
);

create table  OIJ_INEC.cantones (
	ID_Canton int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
	nombre varchar(100) not null,
	ID_Provincia int not null,
	constraint fk_provincia foreign key (ID_Provincia) references OIJ_INEC.Provincias(ID_Provincia)
);

CREATE TABLE  OIJ_INEC.Subdelito (
    ID_SubDelito int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
    Tipo_subdelito VARCHAR(255) NOT NULL unique
);

CREATE TABLE  OIJ_INEC.Delito (
    ID_Delito int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
    Tipo_delito VARCHAR(255) NOT NULL,
    ID_SubDelito INT NOT NULL unique,
    FOREIGN KEY (ID_SubDelito) REFERENCES OIJ_INEC.Subdelito(ID_SubDelito)
);

CREATE TABLE  OIJ_INEC.Edad (
    ID_edad int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
    Edad VARCHAR(255) NOT NULL unique
);

CREATE TABLE  OIJ_INEC.Subvictima (
    ID_subvictima int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
    Tipo_subvictima VARCHAR(255) NOT NULL unique
);

CREATE TABLE  OIJ_INEC.Victima (
    ID_victima int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
    Tipo_victima VARCHAR(255) NOT NULL,
    ID_Subvictima INT NOT NULL unique,
    FOREIGN KEY (ID_Subvictima) REFERENCES OIJ_INEC.Subvictima(ID_subvictima)
);

create table  OIJ_INEC.genero (
	ID_Genero int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
	tipo varchar(100) not null unique
);

create table  OIJ_INEC.nacionalidad (
	ID_nacionalidad int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
	nombre varchar(100) not null unique
);

CREATE TABLE  OIJ_INEC.Delito_cometido (
	ID_DelitoCometido int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
 	ID_Delito INT NOT NULL,
    	Fecha DATE NOT NULL,
    	Hora varchar(100) NOT NULL,
    	ID_Victima INT NOT NULL,
    	ID_Edad INT NOT NULL,
	ID_Genero INT NOT NULL,
	ID_Nacionalidad INT NOT NULL,
    	ID_Canton INT NOT NULL,
    	FOREIGN KEY (ID_Delito) REFERENCES OIJ_INEC.Delito(ID_Delito),
    	FOREIGN KEY (ID_Victima) REFERENCES OIJ_INEC.Victima(ID_victima),
    	FOREIGN KEY (ID_Edad) REFERENCES OIJ_INEC.Edad(ID_edad),
	FOREIGN KEY (ID_Genero) REFERENCES OIJ_INEC.Genero(ID_Genero),
	FOREIGN KEY (ID_Nacionalidad) REFERENCES OIJ_INEC.Nacionalidad(ID_nacionalidad),
    	FOREIGN KEY (ID_Canton) REFERENCES OIJ_INEC.Cantones(ID_Canton)
);

create table  OIJ_INEC.porcentajes (
	ID int primary key GENERATED BY DEFAULT AS IDENTITY (start with 1) not null,
	ID_canton int,
	mayores_De_14 float not null,
	tasa_participacion float not null,
	tasa_ocupacion float not null,
	tasa_desempleo float not null,
	economicamente_inactivos float not null,
	dependencia_economica float not null,
	sector_primario float not null,
	sector_secundario float not null,
	sector_terciario float not null,
	constraint fk_canton foreign key (ID_canton) references OIJ_INEC.Cantones(ID_canton)
);





--Normalización
CREATE OR REPLACE PROCEDURE InsertProvinciasToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into OIJ_INEC.provincias(nombre_provincia) 
SELECT DISTINCT provincia 
FROM oij_temp
ON CONFLICT (nombre_provincia) DO NOTHING; 
END;
$$;

call InsertProvinciasToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertCantonesToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
INSERT INTO OIJ_INEC.cantones (nombre, id_provincia)
SELECT distinct canton, ID_Provincia
FROM oij_temp, OIJ_INEC.provincias
where provincia = OIJ_INEC.provincias.nombre_provincia;
END;
$$;

call InsertCantonesToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertNacionalidadesToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into OIJ_INEC.nacionalidad (nombre) 
select nacionalidad from oij_temp
on conflict do nothing;
END;
$$;

call InsertNacionalidadesToOIJ_INEC();


-- Cantón que hacía falta insertar en la tabla cantones --
insert into oij_inec.Cantones(nombre, Id_provincia) values
('valverde vega', 2);


CREATE OR REPLACE PROCEDURE InsertGeneroToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into OIJ_INEC.genero (tipo)
	select genero from oij_temp
	on conflict do nothing;
END;
$$;

call InsertGeneroToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertPorcentajesToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
INSERT INTO OIJ_INEC.porcentajes (
    ID_canton, mayores_De_14, tasa_participacion, tasa_ocupacion, tasa_desempleo,
    economicamente_inactivos, dependencia_economica, sector_primario, sector_secundario, sector_terciario
)
SELECT 
    c.ID_Canton,
    it.poblacion_15_mas, 
    it.tasa_participacion, 
    it.tasa_ocupacion, 
    it.tasa_desempleo, 
    it.porcentaje_inactiva, 
    it.relacion_dependencia, 
    it.sector_primario, 
    it.sector_secundario, 
    it.sector_terciario
FROM INEC_TEMP it
JOIN oij_inec.Cantones c 
ON c.nombre= REGEXP_SUBSTR(it.provincia_canton, '[^,]+');
END;
$$;

call InsertPorcentajesToOIJ_INEC();



CREATE OR REPLACE PROCEDURE InsertEdadToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into oij_inec.edad (edad) 
select edad from oij_temp
on conflict do nothing;
END;
$$;

call InsertEdadToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertSubdelitoToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into oij_inec.subdelito (tipo_subdelito)
select subdelito from oij_temp on conflict do nothing;
END;
$$;

call InsertSubdelitoToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertDelitoToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into oij_inec.delito (tipo_delito, id_subdelito)
select oij_temp.delito, oij_inec.subdelito.id_subdelito
from oij_temp, oij_inec.subdelito
where oij_temp.subdelito = oij_inec.subdelito.tipo_subdelito
on conflict do nothing;
END;
$$;

call InsertDelitoToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertSubvictimaToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into oij_inec.subvictima (tipo_subvictima)
select subvictima
from oij_temp
on conflict do nothing;
END;
$$;

call InsertSubvictimaToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertVictimaToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into oij_inec.victima ( tipo_victima, id_subvictima)
select oij_temp.victima, oij_inec.subvictima.id_subvictima
from oij_temp, oij_inec.subvictima 
where oij_inec.subvictima.tipo_subvictima = oij_temp.subvictima
on conflict do nothing;
END;
$$;

call InsertVictimaToOIJ_INEC();

CREATE OR REPLACE PROCEDURE InsertDelito_cometidoToOIJ_INEC()
LANGUAGE plpgsql
AS $$
BEGIN
insert into oij_inec.delito_cometido (ID_Delito, Fecha, Hora, ID_Victima, ID_Edad, ID_Genero, ID_Nacionalidad, ID_Canton)
select oij_inec.delito.id_delito, TO_DATE(oij_temp.fecha, 'YYYY-MM-DD'), oij_temp.hora, oij_inec.victima.id_victima, oij_inec.edad.id_edad, oij_inec.genero.id_genero, oij_inec.nacionalidad.id_nacionalidad, oij_inec.cantones.id_canton
from oij_temp, oij_inec.delito, oij_inec.subdelito, oij_inec.victima,  oij_inec.edad, oij_inec.genero, oij_inec.nacionalidad, oij_inec.cantones, oij_inec.provincias, oij_inec.subvictima
where oij_temp.delito = oij_inec.delito.tipo_delito
and oij_temp.subdelito = oij_inec.subdelito.tipo_subdelito
and oij_temp.victima =  oij_inec.victima.tipo_victima
and oij_temp.subvictima = oij_inec.subvictima.tipo_subvictima
and oij_temp.edad =  oij_inec.edad.edad
and oij_temp.genero = oij_inec.genero.tipo
and oij_temp.nacionalidad = oij_inec.nacionalidad.nombre
and oij_temp.provincia = oij_inec.provincias.nombre_provincia
and oij_temp.canton = oij_inec.cantones.nombre
and oij_inec.subvictima.id_subvictima = oij_inec.victima.id_subvictima
and oij_inec.delito.id_subdelito = oij_inec.subdelito.id_subdelito
and oij_inec.cantones.id_provincia = oij_inec.provincias.id_provincia;
END;
$$;

call InsertDelito_cometidoToOIJ_INEC();

-- Un comando que devuelva la lista de cantones del conjunto de datos del OIJ que
--no coinciden con ningún cantón del conjunto de datos del Inec. --

SELECT DISTINCT
    c.nombre AS canton
FROM oij_inec.Cantones c
WHERE NOT EXISTS (
    SELECT 1 
    FROM INEC_TEMP it
    WHERE c.nombre=it.provincia_canton
)

AND LOWER(c.nombre) NOT LIKE '%provincia%'
AND LOWER(c.nombre) NOT LIKE '%costa rica%';


